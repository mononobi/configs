# generate a pair of public and private ssh keys on your local machine.
# then copy them into /home/local_user_name/.ssh of your local machine.

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

# start the ssh agent on local machine.

eval "$(ssh-agent -s)"

# add the private key you've generated into ssh agent on loacl machine.

ssh-add /home/local_user_name/.ssh/private_key

# connect to server with a user which is sudoer.

ssh user@server_ip

# create a user other than root on server if not existed.

adduser user_name

# add the created or already existed user into sudoers.

adduser user_name sudo

# add the public key into the server from your local machine.

ssh-copy-id -i /home/local_user_name/.ssh/key.pub user_name@server_ip

# test whether you can login without providing password.

ssh user_name@server_ip

# if you were able to login without providing password, now you can disable 
# password login to server to prevent others who may detect your password from logging in.
# get root privilage on server.

sudo su

# then execute below command to edit the file.

vi /etc/ssh/sshd_config

# find ChallengeResponseAuthentication and set it as follows.

ChallengeResponseAuthentication no

# find PasswordAuthentication and set it as follows.

PasswordAuthentication no

# find UsePAM and set it as follows.

UsePAM no

# find PermitRootLogin and set it as follows and save the file.

PermitRootLogin no

# run below command to reset ssh service.

systemctl reload ssh

# now only logins with created ssh keys are allowed, and direct login as root is also prohibited.
# it might be required to reboot server if changes not took effect.